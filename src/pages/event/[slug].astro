---
import { getCollection, type CollectionEntry } from "astro:content";
import Main from "@/components/html-structure/Main.astro";
import Layout from "@/layouts/Layout.astro";
import { Image } from "astro:assets";

export const prerender = true;

export const getStaticPaths = async () => {
  try {
    // Get only .mdoc events (filter out .mdx files and underscore-prefixed files)
    const eventEntries = await getCollection("event", ({ id }) => {
      return !id.startsWith('_') && id.endsWith('.mdoc');
    });
    
    // Log all available events for debugging
    console.log('Available .mdoc events:', eventEntries.map(e => ({ id: e.id, slug: e.slug })));
    
    // Create paths for each valid event
    const paths = [];
    
    for (const eventEntry of eventEntries) {
      // For .mdoc files, create multiple possible slugs
      const slugs = new Set<string>();
      
      // Add the default slug if it exists
      if (eventEntry.slug) {
        slugs.add(eventEntry.slug);
      }
      
      // Add the id without .mdoc extension
      slugs.add(eventEntry.id.replace('.mdoc', ''));
      
      // Create a path for each possible slug
      for (const slug of slugs) {
        paths.push({
          params: { slug },
          props: { event: eventEntry },
        });
      }
    }
    
    console.log('Generated paths for .mdoc files:', paths.map(p => p.params.slug));
    return paths;
  } catch (error) {
    console.error('Error generating event paths:', error);
    return [];
  }
};

type Props = {
  event: CollectionEntry<"event">;
};

// Get the event from props with type safety
const { event } = Astro.props as Props;

// Initialize variables outside try-catch for scope
let Content: any;
let formattedDate = '';

// Debug the event data
console.log('Event data:', {
  id: event?.id,
  slug: event?.slug,
  collection: event?.collection,
  data: event?.data ? Object.keys(event.data) : 'No data'
});

// Only proceed with rendering if we have an event
if (event) {
  try {
    // Render the event content
    const rendered = await event.render();
    Content = rendered.Content;
    
    // Format the date as UTC with better error handling
    if (event.data && event.data.date) {
      try {
        // Handle different date formats safely
        let dateString = '';
        
        if (typeof event.data.date === 'string') {
          dateString = event.data.date;
        } else {
          // Handle any other type safely
          dateString = String(event.data.date);
        }
        
        // If the date doesn't have a time component, add one to ensure proper parsing
        if (!dateString.includes('T') && !dateString.includes(' at ')) {
          dateString += 'T00:00:00Z';
        }
        
        const eventDate = new Date(dateString);
        formattedDate = eventDate.toLocaleDateString('en-US', {
          timeZone: 'UTC',
          weekday: 'long',
          month: 'short',
          day: '2-digit'
        });
      } catch (dateError) {
        console.error('Error formatting date:', dateError);
        formattedDate = String(event.data.date || 'Date unavailable'); // Fallback
      }
    }
  } catch (error) {
    console.error('Error rendering event content:', error);
    // Instead of redirecting, we'll show a fallback UI
    Content = () => {};
  }
} else {
  console.error('Event not found in props');
  return Astro.redirect('/event');
}


// const formattedDate = event.data.date ? format(new Date(event.data.date), "MMMM do, yyyy") : "";

function isValidUrl(urlString: string) {
  try {
    new URL(urlString);
    return true;
  } catch (error) {
    return false;
  }
}
---

<Layout title={`${event.data.title} | Event`} description={`${event.data.description}`}>
  <Main>

    <div class="pt-6">
      <nav aria-label="Breadcrumb" class="py-4">
        <ol role="list" class="flex items-center space-x-4">
          <li>
            <div class="flex items-center">
              <a href="/" class="text-gray-400 hover:text-gray-500">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="h-4 w-4 flex-shrink-0 mr-4 text-sm font-medium text-gray-900" aria-hidden="true">
                  <path stroke-linecap="round" stroke-linejoin="round" d="m2.25 12 8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25" />
                </svg>
                <span class="sr-only">Home</span>
              </a>

              <svg viewBox="0 0 6 20" aria-hidden="true" class="h-5 w-auto text-gray-300">
                <path d="M4.878 4.34H3.551L.27 16.532h1.327l3.281-12.19z" fill="currentColor"></path>
              </svg>
            </div>
          </li>
          <li>
            <div class="flex items-center">
              <a href="/event" class="mr-4 text-sm font-medium text-gray-900">Events</a>
              <svg viewBox="0 0 6 20" aria-hidden="true" class="h-5 w-auto text-gray-300">
                <path d="M4.878 4.34H3.551L.27 16.532h1.327l3.281-12.19z" fill="currentColor"></path>
              </svg>
            </div>
          </li>

          <li class="text-sm font-medium text-gray-500">
            {event.data.title}
          </li>
        </ol>
      </nav>
      <div class="lg:grid lg:auto-rows-min lg:grid-cols-12 lg:gap-x-8">
        <div class="lg:col-span-5 lg:col-start-8">
          <div class="flex justify-between">
            <h1 class="text-3xl font-bold text-gray-900">
              {event.data.title}
            </h1>
            <p class="text-xl font-medium text-gray-900">
              {event.data.price}
            </p>
          </div>


          <p class="text-lg text-gray-600">
            {formattedDate} at {event.data.time}
          </p>

          <div class="mt-8 border-t border-gray-200 pt-8">
            <!-- Social links -->
            <div class="flex space-x-6">
              { event.data.facebook && isValidUrl(event.data.facebook) && (
                <a href={event.data.facebook} class="text-gray-400 hover:text-gray-500" target="_blank">
                  <span class="sr-only">Facebook</span>
                  <svg class="h-6 w-6" fill="currentColor" viewBox="0 0 24 24">   <path fill-rule="evenodd" d="M22 12c0-5.523-4.477-10-10-10S2 6.477 2 12c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V12h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V12h2.773l-.443 2.89h-2.33v6.988C18.343 21.128 22 16.991 22 12z" clip-rule="evenodd" />
                  </svg>
                </a>
              )}
              { event.data.twitter && isValidUrl(event.data.twitter) && (
                <a href={event.data.twitter} class="text-gray-400 hover:text-gray-500" target="_blank">
                  <span class="sr-only">Twitter</span>
                  <svg class="h-6 w-6" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M8.29 20.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0022 5.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.072 4.072 0 012.8 9.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 012 18.407a11.616 11.616 0 006.29 1.84" />
                  </svg>
                </a>
              )}

              { event.data.instagram && isValidUrl(event.data.instagram) && (
                  <a href={event.data.instagram} class="text-gray-400 hover:text-gray-500" target="_blank">
                    <span class="sr-only">Instagram</span>
                    <svg class="h-6 w-6" fill="currentColor" viewBox="0 0 24 24">
                      <path fill-rule="evenodd" d="M12.315 2c2.43 0 2.784.013 3.808.06 1.064.049 1.791.218 2.427.465a4.902 4.902 0 011.772 1.153 4.902 4.902 0 011.153 1.772c.247.636.416 1.363.465 2.427.048 1.067.06 1.407.06 4.123v.08c0 2.643-.012 2.987-.06 4.043-.049 1.064-.218 1.791-.465 2.427a4.902 4.902 0 01-1.153 1.772 4.902 4.902 0 01-1.772 1.153c-.636.247-1.363.416-2.427.465-1.067.048-1.407.06-4.123.06h-.08c-2.643 0-2.987-.012-4.043-.06-1.064-.049-1.791-.218-2.427-.465a4.902 4.902 0 01-1.772-1.153 4.902 4.902 0 01-1.153-1.772c-.247-.636-.416-1.363-.465-2.427-.047-1.024-.06-1.379-.06-3.808v-.63c0-2.43.013-2.784.06-3.808.049-1.064.218-1.791.465-2.427a4.902 4.902 0 011.153-1.772A4.902 4.902 0 015.45 2.525c.636-.247 1.363-.416 2.427-.465C8.901 2.013 9.256 2 11.685 2h.63zm-.081 1.802h-.468c-2.456 0-2.784.011-3.807.058-.975.045-1.504.207-1.857.344-.467.182-.8.398-1.15.748-.35.35-.566.683-.748 1.15-.137.353-.3.882-.344 1.857-.047 1.023-.058 1.351-.058 3.807v.468c0 2.456.011 2.784.058 3.807.045.975.207 1.504.344 1.857.182.466.399.8.748 1.15.35.35.683.566 1.15.748.353.137.882.3 1.857.344 1.054.048 1.37.058 4.041.058h.08c2.597 0 2.917-.01 3.96-.058.976-.045 1.505-.207 1.858-.344.466-.182.8-.398 1.15-.748.35-.35.566-.683.748-1.15.137-.353.3-.882.344-1.857.048-1.055.058-1.37.058-4.041v-.08c0-2.597-.01-2.917-.058-3.96-.045-.976-.207-1.505-.344-1.858a3.097 3.097 0 00-.748-1.15 3.098 3.098 0 00-1.15-.748c-.353-.137-.882-.3-1.857-.344-1.023-.047-1.351-.058-3.807-.058zM12 6.865a5.135 5.135 0 110 10.27 5.135 5.135 0 010-10.27zm0 1.802a3.333 3.333 0 100 6.666 3.333 3.333 0 000-6.666zm5.338-3.205a1.2 1.2 0 110 2.4 1.2 1.2 0 010-2.4z"
                      />
                    </svg>
                  </a>
                )
              }

              { event.data.youtube && isValidUrl(event.data.youtube) && (
                  <a href={event.data.youtube} class="text-gray-400 hover:text-gray-500" target="_blank">
                    <span class="sr-only">YouTube</span>
                    <svg class="h-6 w-6" fill="currentColor" viewBox="0 0 24 24" >
                      <path fill-rule="evenodd" d="M19.812 5.418c.861.23 1.538.907 1.768 1.768C21.998 8.746 22 12 22 12s0 3.255-.418 4.814a2.504 2.504 0 0 1-1.768 1.768c-1.56.419-7.814.419-7.814.419s-6.255 0-7.814-.419a2.505 2.505 0 0 1-1.768-1.768C2 15.255 2 12 2 12s0-3.255.417-4.814a2.507 2.507 0 0 1 1.768-1.768C5.744 5 11.998 5 11.998 5s6.255 0 7.814.418ZM15.194 12 10 15V9l5.194 3Z"
                      />
                    </svg>
                  </a>
                )
              }
            </div>
            <div class="mt-8 flex space-x-6">
              <a href={event.data.website} target="_blank" class="text-base font-semibold leading-7 text-purple-600 hover:underline">{event.data.website}</a>
            </div>
          </div>
          <!-- <div class="mt-3">
            {
              event.data.entertainment?.map((entertainmentI) => (
                <span class="inline-block bg-gray-200 rounded-full px-4 py-2 text-sm text-gray-700 mr-2 mb-2">
                  {entertainmentI}
                </span>
              ))
            }
          </div> -->
        </div>
        { event.data.poster && (
          <div class="mt-4 lg:col-span-7 lg:col-start-1 lg:row-span-3 lg:row-start-1 lg:mt-0">
            <div class="grid grid-cols-1 lg:grid-cols-2 lg:grid-rows-3 lg:gap-8 aspect-[3/4]">
              {/* Wrap image in try-catch to prevent errors */}
              {(() => {
                try {
                  return (
                    <Image
                      src={event.data.poster}
                      format="webp"
                      quality="high"
                      widths={[640, 768, 1024, 1280, 1536]}
                      sizes="(max-width: 640px) 100vw, (max-width: 1024px) 50vw, 800px"
                      alt={`${event.data.title} poster`}
                      class="lg:col-span-2 lg:row-span-2 rounded-2xl object-cover bg-purple-100 h-full w-full shadow-purple-400/30 shadow-2xl"
                      loading="eager"
                      decoding="async"
                    />
                  );
                } catch (error) {
                  console.error('Error rendering poster image:', error);
                  return (
                    <div class="lg:col-span-2 lg:row-span-2 rounded-2xl bg-purple-100 h-full w-full shadow-purple-400/30 shadow-2xl flex items-center justify-center">
                      <p class="text-purple-800">Image not available</p>
                    </div>
                  );
                }
              })()}
            </div>
          </div>
        )}

        <div class="mt-4 lg:col-span-5">
          <div class="mt-10">
            <!-- <h2 class="text-sm font-medium text-gray-900">Event details</h2> -->
            <div class="prose prose-l max-w-none mb-8">
              <p class="prose prose-xl">{ event.data.description }</p>
              <Content />
            </div>

            <!-- Sponsors -->
            <div class="mt-4">
              <h2 class="text-sm font-bold text-gray-900 uppercase mb-2">Sponsored by:</h2>
              <div class="flex">
                <div class="flex flex-col">
                <p class="text-xs font-bold text-gray-900 uppercase">Event</p>
                { event.data.concertSponsor?.map((sponsor: string) => (
                    <span class="text-sm font-medium text-gray-700">
                      {sponsor}
                    </span>
                  ))
                }
                </div>
                <div aria-hidden="true" class="mx-4 text-sm text-gray-400">·</div>

              <div class="flex">
                <div class="flex flex-col">
                  <p class="text-xs font-bold text-gray-900 uppercase">Reception</p>
                  { event.data.receptionSponsor?.map((sponsor: string) => (
                      <span class="text-sm font-medium text-gray-700">
                        {sponsor}
                      </span>
                    ))
                  }
                </div>
              </div>
            </div>

          </div>

          <!-- <form>
            <button
              type="submit"
              class="mt-8 flex w-full items-center justify-center rounded-md border border-transparent bg-purple-600 px-8 py-3 text-base font-medium text-white hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2"
              >Buy tickets (feature coming)</button>
          </form> -->




          <div class="mt-10 p-4 sm:p-6 items-start rounded-lg shadow-purple-400/30 shadow-2xl bg-white">
            <p class="font-semibold text-lg flex gap-1 items-center">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="not-sr-only h-5 w-5" aria-hidden="true">
                <path stroke-linecap="round" stroke-linejoin="round" d="M16.5 6v.75m0 3v.75m0 3v.75m0 3V18m-9-5.25h5.25M7.5 15h5.25M3 5.25c0-.69.56-1.25 1.25-1.25h15.5c.69 0 1.25.56 1.25 1.25v13.5c0 .69-.56 1.25-1.25 1.25H4.25c-.69 0-1.25-.56-1.25-1.25V5.25Z" />
              </svg>
              Tickets
            </p>
            <p class="">Purchase your tickets by phone or emailing.</p>

            <!-- horizontal line -->
            <div class="w-full h-px bg-gray-200 my-2 sm:my-6" style="opacity: 1; transform-origin: 50% 50% 0px;"></div>


            <div class="flex gap-1">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="mt-1 h-5 w-5 flex-none text-purple-600" aria-hidden="true">
                <path stroke-linecap="round" stroke-linejoin="round" d="M10.5 1.5H8.25A2.25 2.25 0 0 0 6 3.75v16.5a2.25 2.25 0 0 0 2.25 2.25h7.5A2.25 2.25 0 0 0 18 20.25V3.75a2.25 2.25 0 0 0-2.25-2.25H13.5m-3 0V3h3V1.5m-3 0h3m-3 18.75h3" />
              </svg>
              <a href="tel:+17806731325" class="whitespace-nowrap text-sm leading-7 text-purple-600" aria-label="Call us at 780-374-2403">780-374-2403</a>
            </div>

            <div class="flex gap-1">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="mt-1 h-5 w-5 flex-none text-purple-600" aria-hidden="true">
                <path stroke-linecap="round" stroke-linejoin="round" d="M16.5 12a4.5 4.5 0 1 1-9 0 4.5 4.5 0 0 1 9 0Zm0 0c0 1.657 1.007 3 2.25 3S21 13.657 21 12a9 9 0 1 0-2.636 6.364M16.5 12V8.25" />
              </svg>
              <a href="mailto:info@daysarts.ca" class="whitespace-nowrap text-sm leading-7 text-purple-600" aria-label="Email us at info@daysarts.ca">info@daysarts.ca</a>
            </div>
          </div>

      </div>
    </div>

  </Main>
</Layout>