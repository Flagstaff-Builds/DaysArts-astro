---
import Layout from "@/layouts/Layout.astro";
import Main from "@components/html-structure/Main.astro";
import Hero from "@components/hero-primary.astro";
import TicketIcon from "@components/icons/TicketIcon.astro";
import { Image } from "astro:assets";
import MovieCard from "@components/movie/MovieCard.astro";

import { getCollection } from "astro:content";
import theatreStatusData from '../content/theatreStatus.json';

// import ChristmasTickets from "@/components/christmas-tickets.astro";

// Define the theatre status type
type TheatreStatus = {
  isClosed: boolean;
  closureTitle?: string;
  closureMessage?: string;
  closedFrom?: string;
  reopensOn?: string;
  closureImage?: string;
  extendedDescription?: string;
  quote?: string;
  signatureName?: string;
  contactEmail?: string;
};

// Cast theatre status data to our type
const theatreStatus = theatreStatusData as unknown as TheatreStatus;

// Function to handle showtime - now expects showtime objects with date and isMatinee
function parseShowtime(showtime: any): Date {
  // Handle new format {date: Date, isMatinee: boolean}
  if (showtime && typeof showtime === 'object' && 'date' in showtime) {
    return showtime.date instanceof Date ? showtime.date : new Date(showtime.date);
  }
  // Fallback for old format (direct Date)
  return showtime instanceof Date ? showtime : new Date(showtime);
}

// Function to normalize dates to start of day for comparison
function normalizeDate(date: Date): Date {
  return new Date(date.getFullYear(), date.getMonth(), date.getDate());
}

// Optimized collection queries - filter out past movies
const movies = (await getCollection("movie"))
  .filter(entry => !entry.id.startsWith('_old/')) // Filter out old movies
  .filter(movie => {
    // Keep movie if it has any showings today or in the future
    const today = normalizeDate(new Date());
    return movie.data.showtimes?.some(showtime => {
      const showtimeDate = normalizeDate(parseShowtime(showtime));
      return showtimeDate >= today;
    }) ?? false;
  })
  .sort((a, b) => a.id.localeCompare(b.id));


// Filter out past events (same logic as EventPost component)
function isEventPast(event: any): boolean {
  // If explicitly marked as past, respect that
  if (event.data.past === true) {
    return true;
  }
  
  // Otherwise check the date dynamically
  const today = normalizeDate(new Date());
  let eventDate: Date | null = null;
  
  if (event.data.dateTime) {
    eventDate = new Date(event.data.dateTime);
  } else if (event.data.date) {
    eventDate = new Date(event.data.date);
  }
  
  if (eventDate) {
    const normalizedEventDate = normalizeDate(eventDate);
    return normalizedEventDate < today;
  }
  
  return false;
}

const allEvents = await getCollection("event");
console.log('All events:', allEvents.map(e => ({ id: e.id, title: e.data.title, dateTime: e.data.dateTime })));

const events = allEvents
  .filter(event => !isEventPast(event)) // Filter out past events
  .sort((a, b) => a.id.localeCompare(b.id));
  
console.log('Filtered events:', events.map(e => ({ id: e.id, title: e.data.title })));

const isTheatreClosed = theatreStatus.isClosed || false;
const hasMovies = !isTheatreClosed && movies.length > 0;
const hasEvents = events.length > 0;

// Helper function to extract plain text from markdown
function getPlainTextExcerpt(markdown: string, maxLength: number = 150): string {
  if (!markdown) return '';
  
  // Remove markdown formatting
  let text = markdown
    .replace(/#{1,6}\s+/g, '') // Remove headers
    .replace(/\*\*([^*]+)\*\*/g, '$1') // Remove bold
    .replace(/\*([^*]+)\*/g, '$1') // Remove italic
    .replace(/\[([^\]]+)\]\([^)]+\)/g, '$1') // Remove links
    .replace(/`([^`]+)`/g, '$1') // Remove inline code
    .replace(/^\s*[-*+]\s+/gm, '') // Remove list markers
    .replace(/^\s*\d+\.\s+/gm, '') // Remove numbered lists
    .replace(/\n\n+/g, ' ') // Replace multiple newlines with space
    .replace(/\n/g, ' ') // Replace single newlines with space
    .trim();
  
  // Truncate to maxLength
  if (text.length > maxLength) {
    text = text.substring(0, maxLength).trim() + '...';
  }
  
  return text;
}

import TheatreClosed from "@/components/theatre-closed.astro";
---


<Layout title="Daysland and District Cultural Arts Society | Theatre" description="Enjoy movies, concerts, and dance classes at theatre, celebrating art and culture.">

  <!-- <ChristmasTickets></ChristmasTickets> -->
  <Hero></Hero>

  <!-- now playing movies -->
  <div class="py-24">
    <div class="mx-auto max-w-7xl px-6 lg:px-8 xl:grid-cols-3">
      {hasMovies ? (

        <div class="mx-auto max-w-2xl lg:mx-0 mb-6">
          <h2 class="text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">
            <a href="now-playing" class="underline hover:no-underline">Upcoming movies</a>
          </h2>
          <p class="mt-6 text-lg leading-8 text-gray-600">Experience the magic of cinema like never before at our movie theatre. Immerse yourself in stunning visuals and captivating soundscapes that transport you right into the heart of the story. Join us for an unforgettable movie-going adventure where every showing is an event in itself!</p>
        </div>

        <ul class="mx-auto grid max-w-2xl grid-cols-1 gap-x-6 gap-y-20 sm:grid-cols-2 md:grid-cols-3 lg:mx-0 lg:max-w-none lg:gap-x-8 xl:col-span-2">
          {movies.map((movie) => (
            <a href={`now-playing#${movie.data.title.replace(/\s+/g, '-')}`}>
              <MovieCard 
                movie={movie} 
                variant="grid" 
                showDescription={true}
                showCast={false}
                showGenre={false}
                showSponsor={true}
                showEventNote={true}
                showShowtimes={false}
              />
            </a>
          ))}
        </ul>
      ) : (
        <TheatreClosed />
      )}
    </div>
  </div>
  <Main>





    <!-- upcoming events -->
    {hasEvents && (
      <div class="py-24 sm:py-32">
      <div class="mx-auto">


        <h2 class="text-base font-semibold leading-7 text-purple-600 flex gap-2 items-center">
          <TicketIcon />
          Upcoming events
        </h2>
        <p class="mt-2 text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">
          <a href="event" class="underline hover:no-underline">Concert Series</a></p>
        <p class="mt-6 text-lg leading-8 text-gray-600">Get ready for an electrifying lineup of live performances and unforgettable experiences in our Concert Series 2024!</p>
        <div class="mt-10 space-y-8 text-base leading-7 text-gray-600 lg:max-w-none">

          <div class="flex flex-col md:grid grid-cols-7 gap-4">
            {events.map((event, index) => {
              const isColSpan2 = index % 7 === 2 || index % 7 === 3 || index % 7 === 6;
              const isRowSpan2 = index % 7 === 1 || index % 7 === 2 || index % 7 === 3;
              const colSpan = isColSpan2 ? 'col-span-2' : index % 7 === 0 ? 'col-span-4' : 'col-span-3';
              const rowSpan = isRowSpan2 ? 'row-span-2' : '';
              const flexClass = isColSpan2 && isRowSpan2 ? 'flex-row md:flex-col' : 'flex-col';

              return (
                <article class={`bg-white rounded-lg shadow-purple-400/30 shadow-xl overflow-hidden transform transition duration-500 hover:scale-105 ${colSpan} ${rowSpan}`}>
                  <a href={`/event/${event.slug}`} class="flex h-full w-full">
                    <div class={`flex md:${flexClass}`}>
                      {(() => {
                        // Extract poster value from Keystatic conditional field, Astro image object, or use direct value
                        let posterSrc = null;
                        if (event.data.poster) {
                          if (typeof event.data.poster === 'string') {
                            posterSrc = event.data.poster;
                          } else if (typeof event.data.poster === 'object' && 'discriminant' in event.data.poster && event.data.poster.value) {
                            posterSrc = event.data.poster.value;
                          } else if (typeof event.data.poster === 'object' && 'src' in event.data.poster) {
                            posterSrc = event.data.poster.src;
                          }
                        }
                        
                        if (posterSrc && typeof posterSrc === 'string') {
                          return (
                            <div class="flex-none w-32 md:w-auto">
                              <img
                                src={posterSrc}
                                alt="Event Poster"
                                class="object-cover h-full w-full max-h-52 md:max-h-none bg-purple-100"
                                loading="lazy"
                                decoding="async"
                              />
                            </div>
                          );
                        }
                        return null;
                      })()}
                      <div class="p-4 flex-auto md:flex-none">
                        <h3 class="text-xl font-semibold text-gray-900">{event.data.title}</h3>
                        <p class="mt-2 text-gray-500 line-clamp-3">{getPlainTextExcerpt(event.body)}</p>
                      </div>
                    </div>
                  </a>
                </article>
              );
            })}
          </div>


        </div>
      </div>
    </div>
    )}





  </Main>

  <!-- become a member CTA -->
  <div class="px-6 py-24 sm:px-6 sm:py-32 lg:px-8 border-t-2 border-slate-100">
    <div class="mx-auto max-w-2xl text-center">
      <h2 class="text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">The Gift of Unforgettable Experiences!</h2>
      <p class="mx-auto mt-6 max-w-xl text-lg leading-8 text-gray-600">Surprise your loved ones with DaysArts Gift Certificates - perfect for movies, events, and all the spectacular offerings at DaysArts.</p>
      <div class="mt-10 flex items-center justify-center gap-x-6">
        <a href="tel:17803742403" itemprop="telephone" class="rounded-md bg-purple-600 px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-purple-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-purple-600">Call to Purchase</a>
      </div>
    </div>
  </div>

  <div class="w-full h-96 overflow-hidden">
    <iframe title="DaysArts Palace Theatre Location" src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d163916.76757823752!2d-112.40435658943628!3d52.90692709179249!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x530aef9a439d9cfd%3A0xdc3a8bfe77899030!2sPalace%20Theatre!5e0!3m2!1sen!2sca!4v1708622148073!5m2!1sen!2sca"
      class="w-full h-full border-none"
      allowfullscreen=""
      loading="lazy"
      referrerpolicy="no-referrer-when-downgrade"
    ></iframe>
  </div>


</Layout>
