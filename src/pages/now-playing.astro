---
import { getCollection } from "astro:content";
import Layout from "../layouts/Layout.astro";
import Main from "@components/html-structure/Main.astro";
import MovieList from "@components/movie/MovieList.astro";
import HeroSecondary from "@components/hero-secondary.astro";
import TheatreClosed from "@/components/theatre-closed.astro";

import { VideoCameraIcon } from '@heroicons/vue/24/outline';

import type { CollectionEntry } from 'astro:content';

let movieEntries = await getCollection("movie") as CollectionEntry<'movie'>[];

// Function to parse date from showtime string (format: "Friday January 26")
function parseShowtime(showtime: string): Date {
  const currentYear = new Date().getFullYear();
  const date = new Date(showtime + ", " + currentYear);
  
  // If the date is in the past and it's early in the year, assume it's next year
  if (!isNaN(date.getTime()) && date < new Date() && new Date().getMonth() < 6) {
    date.setFullYear(currentYear + 1);
  }
  
  return isNaN(date.getTime()) ? new Date(9999, 11, 31) : date;
}

// Function to get the closest showtime for a movie
function getClosestShowtime(movie: CollectionEntry<'movie'>): number {
  if (!movie.data.showtimes || movie.data.showtimes.length === 0) {
    return new Date(9999, 11, 31).getTime(); // Return far future timestamp
  }

  const now = new Date();
  const timestamps = movie.data.showtimes.map(showtime => {
    const date = parseShowtime(showtime);
    return date < now ? new Date(9999, 11, 31).getTime() : date.getTime();
  });
  
  return Math.min(...timestamps);
}

// Sort movies by closest upcoming showtime
movieEntries = movieEntries
  .filter(entry => !entry.id.startsWith('_old/')) // Filter out old movies
  .sort((a, b) => getClosestShowtime(a) - getClosestShowtime(b));

let hasMovies = movieEntries && movieEntries.length > 0;
---

<Layout title="Now playing at Daysland Theatre">
  <!-- HeroSecondary text structure
    title case
    sentence case
    sentence case
  -->
  <HeroSecondary
    tagline="Experience Adventure"
    title="Now playing"
    content="Dive into our latest cinematic adventure">
    <VideoCameraIcon slot="icon" class="h-10" />
  </HeroSecondary>

  <Main>
    {hasMovies ? (
      <MovieList movieEntries={movieEntries} />
    ) : (
      <TheatreClosed />
    )}
  </Main>
</Layout>