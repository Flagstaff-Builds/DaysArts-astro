---
import { getCollection } from "astro:content";
import Layout from "../layouts/Layout.astro";
import Main from "@components/html-structure/Main.astro";
import MovieList from "@components/movie/MovieList.astro";
import HeroSecondary from "@components/hero-secondary.astro";
import TheatreClosed from "@/components/theatre-closed.astro";
import VideoCameraIcon from "@/components/icons/VideoCameraIcon.astro";

import type { CollectionEntry } from 'astro:content';

// Get all movies
let movieEntries = await getCollection("movie") as CollectionEntry<'movie'>[];

// Function to handle showtime - now expects Date objects instead of strings
function parseShowtime(showtime: Date): Date {
  // Showtimes are now Date objects, so we can return them directly
  return showtime instanceof Date ? showtime : new Date(showtime);
}

// Function to normalize dates to start of day for comparison
function normalizeDate(date: Date): Date {
  return new Date(date.getFullYear(), date.getMonth(), date.getDate());
}

// Filter movies and sort by ID (filename)
movieEntries = movieEntries
  .filter(entry => !entry.id.startsWith('_old/')) // Filter out old movies
  .filter(movie => {
    // Keep movie if it has any showings today or in the future
    const today = normalizeDate(new Date());
    return movie.data.showtimes?.some(showtime => {
      const showtimeDate = normalizeDate(parseShowtime(showtime));
      return showtimeDate >= today;
    }) ?? false;
  })
  // Sort by ID (filename) which contains the date in format MM-DD-YYYY
  .sort((a, b) => a.id.localeCompare(b.id));

let hasMovies = movieEntries && movieEntries.length > 0;

---

<Layout title="Now playing at Daysland Theatre" description="Explore the latest movies, and events happening in Daysland, Alberta. Check showtimes and plan your visit.">
  <!-- HeroSecondary text structure
    title case
    sentence case
    sentence case
  -->
  <HeroSecondary
    tagline="Experience Adventure"
    title="Now playing"
    content="Dive into our latest cinematic adventure">
    <VideoCameraIcon slot="icon" class="h-10" />
  </HeroSecondary>

  <Main>
    {hasMovies ? (
      <MovieList movieEntries={movieEntries} />
    ) : (
      <TheatreClosed />
    )}
  </Main>
</Layout>