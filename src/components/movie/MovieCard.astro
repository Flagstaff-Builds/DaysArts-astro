---
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';
import CalendarDaysIcon from '../icons/CalendarDaysIcon.astro';

export interface Props {
  movie: CollectionEntry<'movie'>;
  variant?: 'grid' | 'hero' | 'detailed';
  showDescription?: boolean;
  showCast?: boolean;
  showGenre?: boolean;
  showEventNote?: boolean;
  showShowtimes?: boolean;
  showSponsor?: boolean;
  class?: string;
}

const { 
  movie, 
  variant = 'grid', 
  showDescription = true,
  showCast = false,
  showGenre = true,
  showEventNote = true,
  showShowtimes = true,
  showSponsor = true,
  class: className = ''
} = Astro.props;

// Helper function to safely get poster value with fallback handling
function getSafePosterValue(poster: any): string | any {
  if (!poster) return null;
  
  let value;
  // Handle conditional field structure
  if (poster.discriminant && poster.value) {
    value = poster.value;
  } else {
    // Handle direct value (legacy format)
    value = poster;
  }
  
  return value;
}

// Safe synchronous version that returns the raw value
function getPosterValue(poster: any): string | any {
  if (!poster) return null;
  
  // Handle conditional field structure
  if (poster.discriminant && poster.value) {
    return poster.value;
  }
  
  // Handle direct value (legacy format)
  return poster;
}

// Check if the poster is a valid image import
function isValidImageImport(value: any): boolean {
  return value && typeof value === 'object' && 'src' in value;
}

// Check if URL is valid for display
function isValidUrl(url: string): boolean {
  if (!url || url.trim() === '') return false;
  try {
    new URL(url);
    return true;
  } catch {
    return false;
  }
}

const posterValue = getPosterValue(movie.data.poster);
const hasGenres = (movie.data.genre?.length ?? 0) > 0;
const hasCast = (movie.data.cast?.length ?? 0) > 0;
const hasShowtimes = (movie.data.showtimes?.length ?? 0) > 0;

// Hero variant specific styles
const heroCardClass = variant === 'hero' ? 'px-0 relative shadow-purple-400/30 shadow-2xl rounded-xl' : '';
const heroImageClass = variant === 'hero' ? 'aspect-[2/3] bg-purple-100 rounded-2xl rounded-b-none' : '';
const heroArticleClass = variant === 'hero' ? 'p-4 sm:p-6 lg:p-4 xl:p-6 space-x-4 items-start sm:space-x-6 lg:space-x-4 xl:space-x-6 flex rounded-b-2xl bg-white text-slate-900' : '';

// Grid variant specific styles
const gridCardClass = variant === 'grid' ? 'transform transition duration-500 hover:scale-105' : '';

// Detailed variant specific styles (for MoviePost)
const detailedCardClass = variant === 'detailed' ? `relative items-start md:flex rounded-xl shadow-purple-400/30 shadow-xl overflow-hidden ${movie.data.reelAlternative ? 'border-2 border-purple-100 bg-purple-50' : 'bg-white'}` : '';
---

{variant === 'hero' && (
  <div class={`${heroCardClass} ${className}`}>
    <div class="absolute top-2 left-2 rounded-md text-sm px-3.5 py-2.5 font-semibold leading-6 text-slate-900 bg-slate-100 z-10">Now playing</div>
    <div class="lg:-mr-20 mx-auto sm:mx-0 sm:max-w-none"></div>
    <div>
      <div class={heroImageClass}>
        {posterValue ? (
          typeof posterValue === 'string' ? (
            <img
              src={posterValue}
              width="2432"
              height="1442"
              alt="Now Playing"
              loading="eager"
              class="-mb-2 rounded-t-2xl object-cover h-full w-full"
              onerror="this.onerror=null; this.src='/movie-placeholder.svg'; console.error('Error loading hero image');"
            />
          ) : (
            <div class="relative h-full w-full">
              {isValidImageImport(posterValue) ? (
                <Image
                  src={posterValue}
                  width={2432}
                  height={1442}
                  alt="Now Playing"
                  loading="eager"
                  class="-mb-2 rounded-t-2xl object-cover h-full w-full"
                />
              ) : (
                <div class="-mb-2 rounded-t-2xl bg-purple-100 h-full w-full flex items-center justify-center">
                  <div class="text-center p-4">
                    <p class="text-lg font-bold text-slate-900">{movie.data.title}</p>
                    <p class="text-sm text-slate-600">No poster available</p>
                  </div>
                </div>
              )}


      {movie.data.reelAlternative && (
        <div class="absolute bottom-8 left-4 z-10">
          <span class="rounded-md bg-purple-600 px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm">Reel Alternative Film</span>
        </div>
      )}
            </div>
          )
        ) : (
          <div class="-mb-2 rounded-t-2xl bg-purple-100 h-full w-full flex items-center justify-center">
            <div class="text-center p-4">
              <p class="text-lg font-bold text-slate-900">{movie.data.title}</p>
              <p class="text-sm text-slate-600">No poster available</p>
            </div>
          </div>
        )}
      </div>

      <article class={heroArticleClass}>
        <div class="min-w-0 relative flex-auto">
          <h2 class="font-semibold truncate sm:pr-20">{movie.data.title}</h2>
          <dl class="mt-2 flex flex-wrap text-sm leading-6 font-medium">
            <div>
              <dt class="sr-only">Rating</dt>
              <dd class="px-1.5 ring-1 ring-slate-200 rounded">{movie.data.rating}</dd>
            </div>
            <div>
              <dt class="sr-only">Genre</dt>
              <dd class="flex items-center">
                <div aria-hidden="true" class="mx-4 text-sm text-gray-400">·</div>
                {hasGenres && (
                  <span>
                    {movie.data.genre?.map((genre, index, array) => (
                      <span>
                        {genre}{index < array.length - 1 ? ', ' : ''}
                      </span>
                    ))}
                  </span>
                )}
              </dd>
            </div>
            <div>
              <dt class="sr-only">Runtime</dt>
              <dd class="flex items-center">
                <div aria-hidden="true" class="mx-4 text-sm text-gray-400">·</div>
                {movie.data.length}
              </dd>
            </div>
            
            {showEventNote && movie.data.eventNote && (
              <div class="flex-none w-full mt-4 font-normal">
                <p class="text-purple-600 font-bold">
                  {movie.data.eventNote}
                </p>
              </div>
            )}

            <div class="flex-none w-full mt-2 font-normal">
              <dt class="sr-only">Cast</dt>
              <dd class="text-slate-500">
                {hasCast && (
                  <span>
                    {movie.data.cast?.map((cast, index, array) => (
                      <span>
                        {cast}{index < array.length - 1 ? ', ' : ''}
                      </span>
                    ))}
                  </span>
                )}
              </dd>
            </div>
            
            {showDescription && movie.body && (
              <div class="flex-none w-full mt-4 font-normal">
                <p class="text-slate-600 text-sm leading-6 line-clamp-3">{movie.body}</p>
              </div>
            )}
            
            {showShowtimes && (
              <>
                <div class="flex-none w-full mt-4 font-normal">
                  <div aria-hidden="true" class="w-full h-px bg-gray-200 mb-4"></div>
                  <dt class="sr-only">Dates</dt>
                  <dd class="flex flex-wrap gap-x-4 gap-y-2 text-xs text-slate-500">
                    {hasShowtimes && (
                      movie.data.showtimes?.map((showtime: any) => (
                        <span class="flex items-center">
                          <CalendarDaysIcon slot="icon" class="h-4 mr-1" />
                          {(() => {
                            const date = new Date(showtime.date);
                            const month = date.toLocaleDateString('en-US', { month: 'short' });
                            const day = date.getDate();
                            const suffix = day === 1 || day === 21 || day === 31 ? 'st' : 
                                         day === 2 || day === 22 ? 'nd' : 
                                         day === 3 || day === 23 ? 'rd' : 'th';
                            const dateStr = `${month} ${day}${suffix}`;
                            return showtime.isMatinee ? `${dateStr} - 2pm Matinee` : dateStr;
                          })()}
                        </span>
                      ))
                    )}
                  </dd>
                </div>
              </>
            )}
            
            {showSponsor && ((movie.data.sponsors && movie.data.sponsors.length > 0) || (movie.data.contact && movie.data.contact.length > 0)) && (
              <div class="flex-none w-full mt-4 font-normal">
                <h3 class="text-sm font-semibold text-slate-900">Sponsored by:</h3>
                <ul class="flex flex-wrap gap-x-2 gap-y-1 text-slate-600">
                  {movie.data.sponsors?.map((sponsor, index, array) => (
                    <li>
                      <span class="font-medium">{sponsor}{index < array.length - 1 ? ', ' : ''}</span>
                    </li>
                  ))}
                  {movie.data.contact && movie.data.contact.map(contact => (
                    <li>
                      <span class="font-medium">{contact.name}</span>: 
                      <a href={`tel:${contact.phone}`} class="text-purple-600 hover:underline">
                        {contact.phone}
                      </a>
                    </li>
                  ))}
                </ul>
              </div>
            )}
          </dl>
        </div>
      </article>
    </div>
  </div>
)}

{variant === 'grid' && (
  <li class={`${gridCardClass} ${className}`}>
    {posterValue && (
      (() => {
        return posterValue ? (
          typeof posterValue === 'string' ? (
            <img
              src={posterValue}
              alt={movie.data.title}
              class="aspect-[2/3] w-full rounded-xl object-cover z-0 bg-purple-100 shadow-purple-400/30 shadow-xl"
            />
          ) : isValidImageImport(posterValue) ? (
            <Image
              src={posterValue}
              alt={movie.data.title}
              class="aspect-[2/3] w-full rounded-xl object-cover z-0 bg-purple-100 shadow-purple-400/30 shadow-xl"
            />
          ) : (
            <div class="aspect-[2/3] w-full rounded-xl bg-purple-100 shadow-purple-400/30 shadow-xl flex items-center justify-center">
              <div class="text-center p-4">
                <p class="text-sm font-bold">{movie.data.title}</p>
                <p class="text-xs text-gray-600">No poster available</p>
              </div>
            </div>
          )
        ) : null;
      })()
    )}

    {movie.data.reelAlternative && (
      <div class="z-1 -mt-12 absolute ml-4">
        <span class="rounded-md bg-purple-600 px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm">Reel Alternative Film</span>
      </div>
    )}

    <h3 class="mt-6 text-lg font-semibold leading-8 text-gray-900">{movie.data.title}</h3>

    {movie.data.rating && (
      <p class="inline text-sm px-1.5 ring-1 ring-slate-200 rounded font-medium leading-6 py-1">{movie.data.rating}</p>
    )}

    {showEventNote && movie.data.eventNote && (
      <p class="mt-2 text-purple-600 font-bold">{movie.data.eventNote}</p>
    )}

    {showDescription && movie.body && (
      <p class="mt-4 text-base leading-7 text-gray-600 line-clamp-3">{movie.body}</p>
    )}

    {showShowtimes && hasShowtimes && (
      <div class="mt-4">
        <div aria-hidden="true" class="w-full h-px bg-gray-200 mb-4"></div>
        <dt class="sr-only">Dates</dt>
        <dd class="flex flex-wrap gap-x-4 gap-y-2 text-xs text-slate-500">
          {movie.data.showtimes?.map((showtime: any) => (
            <span class="flex items-center">
              <CalendarDaysIcon slot="icon" class="h-4 mr-1" />
              {(() => {
                const date = new Date(showtime.date);
                const month = date.toLocaleDateString('en-US', { month: 'short' });
                const day = date.getDate();
                const suffix = day === 1 || day === 21 || day === 31 ? 'st' : 
                             day === 2 || day === 22 ? 'nd' : 
                             day === 3 || day === 23 ? 'rd' : 'th';
                const dateStr = `${month} ${day}${suffix}`;
                return showtime.isMatinee ? `${dateStr} - 2pm Matinee` : dateStr;
              })()}
            </span>
          ))}
        </dd>
      </div>
    )}

    {showSponsor && ((movie.data.sponsors && movie.data.sponsors.length > 0) || (movie.data.contact && movie.data.contact.length > 0)) && (
      <div class="mt-2 space-y-1">
        <h3 class="text-xs font-semibold text-slate-900">Sponsored by:</h3>
        <ul class="flex flex-wrap gap-x-2 gap-y-1 text-sm text-slate-600">
          {movie.data.sponsors?.map((sponsor, index, array) => (
            <li>
              <span class="font-medium">{sponsor}{index < array.length - 1 ? ', ' : ''}</span>
            </li>
          ))}
          {movie.data.contact && movie.data.contact.map(contact => (
            <li>
              <span class="font-medium">{contact.name}</span>: 
              <span class="text-purple-600 hover:underline">
                {contact.phone}
              </span>
            </li>
          ))}
        </ul>
      </div>
    )}
  </li>
)}

{variant === 'detailed' && (
  <article class={`${detailedCardClass} ${className}`}>
    <div class="aspect-[2/3] md:w-1/3">
      {posterValue ? (
        typeof posterValue === 'string' ? (
          <img
            src={posterValue}
            width={1024}
            height={1024 / 1.5}
            alt={`${movie.data.title} poster`}
            class="rounded-t-2xl sm:rounded-t-none md:rounded-l-2xl object-cover h-full w-full bg-purple-100"
            onerror="this.onerror=null; this.src='/movie-placeholder.svg'; console.error('Error loading image:', this.alt);"
          />
        ) : (
          <div class="relative h-full w-full">
            {isValidImageImport(posterValue) ? (
              <Image
                src={posterValue}
                width={1024}
                height={1536}
                alt={`${movie.data.title} poster`}
                class="rounded-t-2xl sm:rounded-t-none md:rounded-l-2xl object-cover h-full w-full bg-purple-100"
              />
            ) : (
              <div class="rounded-t-2xl sm:rounded-t-none md:rounded-l-2xl bg-purple-100 h-full w-full flex items-center justify-center">
                <div class="text-center p-4">
                  <p class="text-lg font-bold">{movie.data.title}</p>
                  <p class="text-sm text-gray-600">No poster available</p>
                </div>
              </div>
            )}
          </div>
        )
      ) : (
        <div class="rounded-t-2xl sm:rounded-t-none md:rounded-l-2xl bg-purple-100 h-full w-full flex items-center justify-center">
          <div class="text-center p-4">
            <p class="text-lg font-bold">{movie.data.title}</p>
            <p class="text-sm text-gray-600">No poster available</p>
          </div>
        </div>
      )}
    </div>

    <div class="p-6 md:w-2/3">
      {movie.data.title && (
        <h2 class="flex-auto text-2xl font-semibold text-slate-900 relative target-element" id={movie.data.title.replace(/\s+/g, '-')}>
          {movie.data.title}

          {movie.data.genre && movie.data.trailer && isValidUrl(movie.data.trailer) && (
            <a href={movie.data.trailer} class="absolute top-0 right-0 z-1 h-7 w-7 text-slate-400 hover:scale-125" target="_blank">
              <span class="sr-only">Play trailer</span>
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                <path fill-rule="evenodd" d="M2 10a8 8 0 1 1 16 0 8 8 0 0 1-16 0Zm6.39-2.908a.75.75 0 0 1 .766.027l3.5 2.25a.75.75 0 0 1 0 1.262l-3.5 2.25A.75.75 0 0 1 8 12.25v-4.5a.75.75 0 0 1 .39-.658Z" clip-rule="evenodd" />
              </svg>
            </a>
          )}
        </h2>
      )}

      {showEventNote && movie.data.eventNote && (
        <p class="mt-2 text-purple-600 font-bold">
          {movie.data.eventNote}
        </p>
      )}

      {movie.body && (
        <p class="mt-2 text-slate-600">
          {movie.body}
        </p>
      )}

      {showSponsor && ((movie.data.sponsors && movie.data.sponsors.length > 0) || (movie.data.contact && movie.data.contact.length > 0)) && (
        <div class="mt-4 space-y-2">
          <h3 class="text-sm font-semibold text-slate-900">Sponsored by:</h3>
          <ul class="text-slate-600 flex flex-wrap gap-x-4 gap-y-2 mt-2">
            {movie.data.sponsors?.map((sponsor, index, array) => (
              <li>
                <span class="font-medium">{sponsor}{index < array.length - 1 ? ', ' : ''}</span>
              </li>
            ))}
            {movie.data.contact && movie.data.contact.map(contact => (
              <li>
                <span class="font-medium">{contact.name}</span>
                {contact.phone && (
                  <>
                    : <a href={`tel:${contact.phone}`} class="text-purple-600 hover:underline">
                      {contact.phone}
                    </a>
                  </>
                )}
              </li>
            ))}
          </ul>
        </div>
      )}

      <div class="mt-6">
        {showCast && hasCast && (
          <>
            <dt class="uppercase font-semibold text-xs text-slate-400">Cast</dt>
            <dd class="flex items-center mt-2 text-sm">
              <ul class="flex flex-wrap gap-x-1 text-slate-500">
                {movie.data.cast?.map((cast, index, array) => (
                  <li>
                    {cast}{index < array.length - 1 ? ', ' : ''}
                  </li>
                ))}
              </ul>
            </dd>
          </>
        )}
      </div>

      <div class="w-full h-px bg-gray-200 my-6" style="opacity: 1; transform-origin: 50% 50% 0px;"></div>

      <dl class="mt-2 flex flex-wrap text-sm leading-6 font-medium">
        <div class="flex flex-wrap sm:flex-nowrap w-full">
          {movie.data.rating && (
            <div>
              <dt class="sr-only">Rating</dt>
              <dd class="px-1.5 ring-1 ring-slate-200 rounded">
                {movie.data.rating}
              </dd>
            </div>
          )}

          {movie.data.length && (
            <div>
              <dt class="sr-only">Runtime</dt>
              <dd class="flex items-center">
                <div aria-hidden="true" class="mx-4 text-sm text-gray-400">·</div>
                {movie.data.length}
              </dd>
            </div>
          )}

          {showGenre && movie.data.genre && (
            <div>
              <dt class="sr-only">Genre</dt>
              <dd class="flex flex-nowrap items-center">
                <div aria-hidden="true" class="mx-4 text-sm text-gray-400">·</div>
                {hasGenres && (
                  <ul class="flex flex-wrap sm:flex-nowrap gap-x-1">
                    {movie.data.genre.map((genre, index, array) => (
                      <li>
                        {genre}{index < array.length - 1 ? ', ' : ''}
                      </li>
                    ))}
                  </ul>
                )}
              </dd>
            </div>
          )}
        </div>

        <div class="mt-6">
          <dt class="uppercase font-semibold text-xs text-slate-400">Showtimes</dt>
          <dd class="flex flex-wrap gap-x-4 gap-y-2 mt-2">
            {showShowtimes && hasShowtimes && (
              movie.data.showtimes?.map((showtime: any) => (
                <span class="flex items-center text-sm text-gray-500">
                  <CalendarDaysIcon slot="icon" class="h-4 mr-1" />
                  {(() => {
                    const date = new Date(showtime.date);
                    const month = date.toLocaleDateString('en-US', { month: 'short' });
                    const day = date.getDate();
                    const suffix = day === 1 || day === 21 || day === 31 ? 'st' : 
                                 day === 2 || day === 22 ? 'nd' : 
                                 day === 3 || day === 23 ? 'rd' : 'th';
                    const dateStr = `${month} ${day}${suffix}`;
                    return showtime.isMatinee ? `${dateStr} - 2pm Matinee` : dateStr;
                  })()}
                </span>
              ))
            )}

            {movie.data.reelAlternative && (
              <div class="mt-10 md:absolute md:bottom-4 md:right-2">
                <a href="/reel-alternative-film" class="rounded-md bg-purple-600 px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-purple-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-purple-600">Reel Alternative Film</a>
              </div>
            )}
          </dd>
        </div>
      </dl>
    </div>
  </article>
)}

<style is:global>
  .target-element {
    scroll-margin-top: 80px;
  }
</style>