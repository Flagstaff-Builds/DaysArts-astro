---
import { Image } from 'astro:assets';
import { CalendarDaysIcon, PlayCircleIcon } from '@heroicons/vue/20/solid';

interface MovieData {
  title: string;
  poster?: string;
  description?: string;
  cast?: string[];
  rating?: string;
  length?: string;
  genre?: string[];
  trailer?: string;
  showtimes?: string[];
  reelAlternative?: boolean;
  eventNote?: string;
  contact?: Array<{
    name: string;
    phone: string;
  }>;
}

interface Movie {
  data: MovieData;
  slug: string;
}

type Props = {
  movie: Movie;
};

const { movie } = Astro.props as Props;
---


<!-- this is the repeatable component within an <li> -->
<article class={`relative items-start md:flex rounded-xl shadow-purple-400/30 shadow-xl overflow-hidden ${movie.data.reelAlternative ? 'border-2 border-purple-100 bg-purple-50' : 'bg-white'}`}>

  <div class="aspect-[2/3] md:w-1/3">
    {movie.data.poster ? (
      movie.data.poster.toString().startsWith('http') ? (
        <img
          src={movie.data.poster.toString()}
          width={1024}
          height={1024 / 1.5}
          alt={`${movie.data.title} poster`}
          class="rounded-t-2xl sm:rounded-t-none md:rounded-l-2xl object-cover h-full w-full bg-purple-100"
          onerror="this.onerror=null; this.src='/movie-placeholder.svg'; console.error('Error loading image:', this.alt);"
        />
      ) : (
        <div class="relative h-full w-full">
          {/* Use img instead of Image component for local files */}
          <img
            src={movie.data.poster.toString()}
            width="1024"
            height="1536"
            alt={`${movie.data.title} poster`}
            class="rounded-t-2xl sm:rounded-t-none md:rounded-l-2xl object-cover h-full w-full bg-purple-100"
            onerror="this.onerror=null; this.src='/movie-placeholder.svg'; console.error('Error loading image:', this.alt);"
          />
        </div>
      )
    ) : (
      <div class="rounded-t-2xl sm:rounded-t-none md:rounded-l-2xl bg-purple-100 h-full w-full flex items-center justify-center">
        <div class="text-center p-4">
          <p class="text-lg font-bold">{movie.data.title}</p>
          <p class="text-sm text-gray-600">No poster available</p>
        </div>
      </div>
    )}
  </div>

  <div class="p-6 md:w-2/3">
    {movie.data.title && (
      <h2 class="flex-auto text-2xl font-semibold text-slate-900 relative target-element" id={movie.data.title.replace(/\s+/g, '-')}>
        {movie.data.title}
        <!-- <a href={`/movie/${movie.slug}`} class="text-inherit underline hover:underline-offset-4"></a> -->

        {movie.data.genre && (
          <a href={movie.data.trailer} class="absolute top-0 right-0 z-1 h-7 w-7 text-slate-400 hover:scale-125" target="_blank">
            <span class="sr-only">Play trailer</span>
            <PlayCircleIcon aria-hidden="true" />
          </a>
        )}
      </h2>
    )}

    {movie.data.eventNote && (
      <p class="mt-2 text-purple-600 font-bold">
        {movie.data.eventNote}
      </p>
    )}

    {movie.data.description && (
      <p class="mt-2 text-slate-600">
        {movie.data.description}
      </p>
    )}

    {movie.data.contact && movie.data.contact.length > 0 && (
      <div class="mt-4 space-y-2">
        <h3 class="text-sm font-semibold text-slate-900">Contact Information</h3>
        <ul class="list-disc pl-4 text-slate-600">
          {movie.data.contact.map(contact => (
            <li>
              <span class="font-medium">{contact.name}</span>: 
              <a href={`tel:${contact.phone}`} class="text-purple-600 hover:underline">
                {contact.phone}
              </a>
            </li>
          ))}
        </ul>
      </div>
    )}

    <div class="mt-6">
      {movie.data.cast && movie.data.cast.length > 0 && (
      <dt class="uppercase font-semibold text-xs text-slate-400">Cast</dt>
      <dd class="flex items-center mt-2 text-sm">
          <ul class="flex flex-wrap gap-x-1 text-slate-500">
            {movie?.data?.cast?.map((cast: unknown, index: number, array: string | any[]) => (
              <li>
                {cast}{index < array.length - 1 ? ', ' : ''}
              </li>
            ))}
          </ul>
      </dd>
      )}
    </div>


    <!-- horizontal line -->
    <div class="w-full h-px bg-gray-200 my-6" style="opacity: 1; transform-origin: 50% 50% 0px;"></div>

    <dl class="mt-2 flex flex-wrap text-sm leading-6 font-medium ">
      <div class="flex flex-wrap sm:flex-nowrap w-full">
        {movie.data.rating && (
        <div>
          <dt class="sr-only">Rating</dt>
          <dd class="px-1.5 ring-1 ring-slate-200 rounded">
            {movie.data.rating}
          </dd>
        </div>
        )}

        {movie.data.length && (
        <div>
          <dt class="sr-only">Runtime</dt>
          <dd class="flex items-center">
            <div aria-hidden="true" class="mx-4 text-sm text-gray-400">·</div>
            {movie.data.length}
          </dd>
        </div>
        )}

        {movie.data.genre && (
        <div>
          <dt class="sr-only">Genre</dt>
          <dd class="flex flex-nowrap items-center">
            <div aria-hidden="true" class="mx-4 text-sm text-gray-400">·</div>

            {movie.data.genre && movie.data.genre.length > 0 && (
              <ul class="flex flex-wrap sm:flex-nowrap gap-x-1 ">
                {movie.data.genre.map((genre: unknown, index: number, array: string | any[]) => (
                  <li>
                    {genre}{index < array.length - 1 ? ', ' : ''}
                  </li>
                ))}
              </ul>
            )}

          </dd>
        </div>
        )}
      </div>

      <div class="mt-6">
        <dt class="uppercase font-semibold text-xs text-slate-400">Showtimes</dt>
        <dd class="flex flex-wrap sm:flex-nowrap items-center mt-2 text-sm">

          {movie.data.showtimes && movie.data.showtimes.length > 0 && (
            <ul class="flex flex-wrap sm:flex-nowrap gap-x-6 justify-between text-slate-500">
              {movie.data.showtimes?.map((showtimes: string) => (
                <li class="flex justify-between">
                  <CalendarDaysIcon class="h-5 w-5 flex-none text-slate-400 pr-1" aria-hidden="true" />
                  {showtimes}
                </li>
              ))}
            </ul>
          )}

          {movie.data.reelAlternative && (
            <div class="mt-10 md:absolute md:bottom-4 md:right-2">
              <a href="/reel-alternative-film" class="rounded-md bg-purple-600 px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-purple-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-purple-600">Reel Alternative Film</a>
            </div>
          )}
        </dd>
      </div>
    </dl>
  </div>

</article>


<style is:global>
  .target-element {
    scroll-margin-top: 80px;
  }
</style>